name: Docker build

on:
  push:
    branches: [ develop, master, ci-develop ]
  pull_request:
    branches: [ develop, master ]
  workflow_dispatch:
    inputs:
      STAGING_REACT_APP_API_URL:
        default: "http://ec2-18-220-126-12.us-east-2.compute.amazonaws.com:3000/v1"
      STAGING_REACT_APP_HCAPTCHA_SITE_KEY:
        default: "c8e519a2-032a-4e45-9bf1-4f10f6af1b1f"
      STAGING_REACT_APP_CIVIC_APP_ID:
        default: "9CXmtYJvd"
      PROD_REACT_APP_API_URL:
        default: "https://api.humanprotocol.org/v1"
      PROD_REACT_APP_HCAPTCHA_SITE_KEY:
        default: "10cd757e-a469-4302-9ee2-a89e024da91a"
      PROD_REACT_APP_CIVIC_APP_ID:
        default: "9CXmtYJvd"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ap-south-1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::340792883311:role/GithubActionsRoleECR
        role-session-name: GithubActionsSession
        aws-region: us-east-2
      if: github.event_name != 'pull_request'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      if: github.event_name != 'pull_request'

    # - name: Check envs
    #   id: check_envs
    #   run: |
    #     echo $GITHUB_REF_NAME
    #     echo ${GITHUB_SHA::7}

    - name: Prepare values
      id: prepare
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: human-app-ui
      run: |
        IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA::7}-$(date +%s)
        TAGGED_IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
        echo "tagged_image=${TAGGED_IMAGE}" >> $GITHUB_ENV

    - name: Prepare .env values for Staging
      id: prepare-env-staging
      if: github.event_name != 'workflow_dispatch' && github.ref == 'refs/heads/develop'
      run: |
        echo 'REACT_APP_API_URL="http://ec2-18-220-126-12.us-east-2.compute.amazonaws.com:3000/v1"' >> $GITHUB_ENV
        echo 'REACT_APP_HCAPTCHA_SITE_KEY="c8e519a2-032a-4e45-9bf1-4f10f6af1b1f"' >> $GITHUB_ENV
        echo 'REACT_APP_CIVIC_APP_ID="9CXmtYJvd"' >> $GITHUB_ENV

    - name: Prepare .env values for Prod
      id: prepare-env-prod
      if: github.event_name != 'workflow_dispatch' && github.ref == 'refs/heads/master'
      run: |
        echo 'REACT_APP_API_URL="https://api.humanprotocol.org/v1"' >> $GITHUB_ENV
        echo 'REACT_APP_HCAPTCHA_SITE_KEY="10cd757e-a469-4302-9ee2-a89e024da91a"' >> $GITHUB_ENV
        echo 'REACT_APP_CIVIC_APP_ID="9CXmtYJvd"' >> $GITHUB_ENV

    - name: Prepare .env values for Staging manually
      id: prepare-env-staging-manually
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop'
      run: |
        echo 'REACT_APP_API_URL="${{ github.event.inputs.STAGING_REACT_APP_API_URL }}"' >> $GITHUB_ENV
        echo 'REACT_APP_HCAPTCHA_SITE_KEY="${{ github.event.inputs.STAGING_REACT_APP_HCAPTCHA_SITE_KEY }}"' >> $GITHUB_ENV
        echo 'REACT_APP_CIVIC_APP_ID="${{ github.event.inputs.STAGING_REACT_APP_CIVIC_APP_ID }}"' >> $GITHUB_ENV

    - name: Prepare .env values for Prod manually
      id: prepare-env-prod-manually
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
      run: |
        echo 'REACT_APP_API_URL="${{ github.event.inputs.PROD_REACT_APP_API_URL }}"' >> $GITHUB_ENV
        echo 'REACT_APP_HCAPTCHA_SITE_KEY="${{ github.event.inputs.PROD_REACT_APP_HCAPTCHA_SITE_KEY }}"' >> $GITHUB_ENV
        echo 'REACT_APP_CIVIC_APP_ID="${{ github.event.inputs.PROD_REACT_APP_CIVIC_APP_ID }}"' >> $GITHUB_ENV

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build the image
      id: build-image
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push the image to Amazon ECR
      id: build-push-image-develop
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/ci-develop'
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.tagged_image }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          REACT_APP_API_URL="${{ env.REACT_APP_API_URL }}"
          REACT_APP_HCAPTCHA_SITE_KEY="${{ env.REACT_APP_HCAPTCHA_SITE_KEY }}"
          REACT_APP_CIVIC_APP_ID="${{ env.REACT_APP_CIVIC_APP_ID }}"

    - name: Get Github action IP
      id: ip
      if: github.event_name != 'pull_request'
      uses: haythem/public-ip@v1.2

    - name: Configure SSH
      id: configure-ssh
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/ci-develop'
      run: |
        mkdir -p ~/.ssh/
        aws ssm get-parameter --region us-east-2 --name 'SSH_KEY_FOR_CD' --with-decryption --query 'Parameter.Value' --output text > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        cat >>~/.ssh/config <<END
        Host staging
          HostName ec2-18-220-126-12.us-east-2.compute.amazonaws.com
          User ubuntu
          IdentityFile ~/.ssh/staging.key
          StrictHostKeyChecking no
        END

    - name: Add Github Actions IP to Staging Security group
      id: add-ip-to-staging-sg
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/ci-develop'
      run: |
        aws ec2 authorize-security-group-ingress --group-id sg-07faaf04fdd809052 --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: Deploy to Staging server
      id: deploy-to-staging
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/ci-develop'
      continue-on-error: true
      run: |
        ssh staging 'bash -s' < .github/workflows/common/deploy.sh ${{ env.tagged_image }}
 
    - name: Remove Github Actions IP from Staging security group
      id: remove-ip-to-staging-sg
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/ci-develop'
      run: |
        aws ec2 revoke-security-group-ingress --group-id sg-07faaf04fdd809052 --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
